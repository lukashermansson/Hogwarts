/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hogwarts.ElevMeny;

import hogwarts.Validation;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *Denna del visar upp alla kurser som en elev man söker på har registrerats på.
 * 
 */
public class ElevKurser extends javax.swing.JPanel {
    private InfDB db;
    /**
     * Creates new form ElevKurser
     */
    public ElevKurser(InfDB db) {
        this.db = db;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFornamn = new javax.swing.JTextField();
        jTextEfternamn = new javax.swing.JTextField();
        jLabelInfo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableKurser = new javax.swing.JTable();
        jLabelFornamn = new javax.swing.JLabel();
        jLabelEfterNamn = new javax.swing.JLabel();
        jButtonSok = new javax.swing.JButton();
        jLabelError = new javax.swing.JLabel();

        jTextFornamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFornamnActionPerformed(evt);
            }
        });

        jTextEfternamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextEfternamnActionPerformed(evt);
            }
        });

        jLabelInfo.setText("Hitta Kurser på elev");

        jTableKurser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kurs", "Betyg"
            }
        ));
        jScrollPane1.setViewportView(jTableKurser);

        jLabelFornamn.setText("Förnamn");

        jLabelEfterNamn.setText("Efternamn");

        jButtonSok.setText("Sök");
        jButtonSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSokActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelFornamn)
                                    .addComponent(jTextFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelEfterNamn)
                                    .addComponent(jTextEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabelInfo))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jButtonSok)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 84, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFornamn)
                    .addComponent(jLabelEfterNamn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSok)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelError))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFornamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFornamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFornamnActionPerformed

    private void jTextEfternamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEfternamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEfternamnActionPerformed

    private void jButtonSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSokActionPerformed
        if(!Validation.textComponentEmpty(jTextFornamn) && !Validation.textComponentEmpty(jTextEfternamn)){
            String fornamn = jTextFornamn.getText();
            String efternamn = jTextEfternamn.getText();
            if(Validation.isValidName(fornamn) && Validation.isValidName(efternamn)){
            
        
       
                // denna fråga tar fram kursbetyg och kursnamnet för den valda eleven.
                String fraga = "SELECT KURSBETYG, KURSNAMN FROM ELEV JOIN HAR_BETYG_I ON HAR_BETYG_I.ELEV_ID = ELEV.ELEV_ID JOIN KURS ON HAR_BETYG_I.KURS_ID = KURS.KURS_ID WHERE FORNAMN = '" + fornamn + "' AND EFTERNAMN = '" + efternamn + "' UNION SELECT NUll as BETYG, KURSNAMN FROM ELEV JOIN REGISTRERAD_PA ON REGISTRERAD_PA.ELEV_ID = ELEV.ELEV_ID JOIN KURS ON REGISTRERAD_PA.KURS_ID = KURS.KURS_ID WHERE FORNAMN = '" + fornamn + "' AND EFTERNAMN = '" + efternamn + "';";
        
        
                ArrayList<String> poang = new ArrayList<String>();
        
                DefaultTableModel model = (DefaultTableModel) jTableKurser.getModel();
                model.setRowCount(0);
                // denna del använder sig av string frågan ovanför och fyller en tabell med den informationen.
                 try {
                    ArrayList<HashMap<String, String>> result = db.fetchRows(fraga);
                    if(result != null){
                        for(HashMap<String, String> row : result){
                
                            model.addRow(new String[]{row.get("KURSNAMN"), row.get("KURSBETYG")});
                
            
                        }
                        jTableKurser.setModel(model);
                    }else{
                        jLabelError.setText("Det finns inga registerade kurser / betyg på denna elev");
                     }          
                } catch (InfException ex) {
            
                }
            }else{
                jLabelError.setText("Ett namn kan inte innehålla mellanrumm eller siffror");
            }
        }else{
            jLabelError.setText("Namnfäletn får inte vara tomma");
        }
    }//GEN-LAST:event_jButtonSokActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSok;
    private javax.swing.JLabel jLabelEfterNamn;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabelFornamn;
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableKurser;
    private javax.swing.JTextField jTextEfternamn;
    private javax.swing.JTextField jTextFornamn;
    // End of variables declaration//GEN-END:variables
}
